package objects;

public class StudentsExample {
    public static void main(String[] args) {
        //Вот заводим переменные класса студент
        Student s1 = new Student();
        Student s2 = new Student();
        s1.name = "Иванов";
        s2.name = "Петров";
        s1.course = 1;
        s2.course = 2;

        System.out.println(s1.name + " учится на курсе " + s1.course);

        //Различие классов и объектов
        //Класс описывает шаблон устройства объекта
        //Класс говорит, что в объектаъ есть такие-то данные(поля) и такое-то поведение(методы)
        //Класс Student вседа один, потому что только одно описание того, как устроены студенты.
        //Объекты - реализации класса. Их может быть от 0 до много. У нас 2.
        //Объекты - конкретные студенты, класс - понятие студента.

        /*
        Рисунок
        Конструктор выделяет память для объекта, вызывается оператором new Student
         */

        Student s3 = s1; //стрелочка укажет на квадратик s1, они будут отсылаться к одному месту.
        s1.greet();
        /*
        именно скобоки вызывает метод. без скобок - поле, а поле такого нет
         */
        s2.greet();

        //Конструкторы. Было бы здоро создать, срау укахав и имя, и курс
        Student2 ss2 = new Student2("Петрова", 3);
        ss2.greet();

        //если не обозначили поля? По умолчанию они
        System.out.println(new Student().course); //будет нолик
        System.out.println(new Student().name); //будет нулл

        System.out.println(new Student2().course);

        //Использование класса с приватными полями:
        Student3 sss = new Student3("Васильева", 4);
        //sss.name = //не работает
        //System.out.println(sss.name);тоже
        //чтобы узнать или изменить значения свойств, нужны методы: get- set-
        System.out.println(sss.getName()); //узнать имя
        sss.setName("Васильев");
    }
}
